<p>
  <input placeholder="just a random input">
</p>

<div>
  Lazy select (queries server after user types at least 3 characters into filter)
  <br>
  {{combo-box
    selected=this.comboSelectedLazy
    itemKey='a'
    itemLabel='b'
    onSelected=(action 'onLazySingle')
    disabled=this.disabled
    lazyCallback=(action 'lazyCallback')
    abortLazyCallback=(action 'abortLazyCallback')
    minLazyCharacters=2
    pagination=true
    maxDropdownHeight=100
  }}
  <br>
  {{combo-box
    selected=this.comboSelectedLazy
    itemKey='a'
    itemLabel='b'
    onSelected=(action 'onLazySingle')
    disabled=this.disabled
    lazyCallback=(action 'lazyCallback')
    abortLazyCallback=(action 'abortLazyCallback')
    minLazyCharacters=2
    pagination=true
  }}
  <button {{action 'actionClearLazyCombo'}}>clear lazy</button>


  <div>
    Raw value: {{this.comboSelectedLazy}}<br>
    Formatted: {{this.oneItemSelectedLazyFormatted}}
  </div>
</div>
<div>
  Simple combobox
  {{combo-box
    canFilter=false
    lazyCallback=(action 'lazyCallbackSimpleCombo')
    itemKey='a'
    itemLabel='b'
    selected=this.selectedSimpleCombo
    onSelected=(action 'actionSimpleSelectedCombo')
    showDropdownButton=false
    showLabelWhenDisabled=false
    showChooseLabel=false
    showEmptySelectionLabel=false
    simpleCombobox=true
    preselectFirst=false
    maxDropdownHeight=175
    pagination=false
  }}
</div>
<p>

</p>

<div>
  Simple combobox with placeholder
  {{combo-box
    canFilter=true
    itemKey='a'
    itemLabel='b'
    selected=null
    valueList=this.comboValueList
    emptySelectionLabel='I am a placeholder'
  }}
</div>
<p>

</p>

<div>
  Simple combobox with plain array valueList
  {{combo-box
    valueList=this.plainArrayValueList
    selected=this.plainArraySelected

    preselectFirst=true
  }}
</div>

{{this.plainArraySelected}}
<p>

</p>

<div>
  Combobox with dynamic chooseLabel
  {{combo-box
    valueList=this.comboValueList
    selected=this.comboSelectedSingle
    itemKey='a'
    itemLabel='b'
    multiselect=false
    onSelected=(action 'onSelectedSingle')
    canFilter=true
    disabled=this.disabled
    labelOnly=this.labelOnly
    emptySelectionLabel=this.myChooseLabel
    onDisabledCallback=(action 'onDisabledCallback')
  }}

  {{input value=this.myChooseLabel}}
  {{this.myChooseLabel}}
</div>
<p>

</p>

<div>
  Sorted combobox
  {{combo-box
    canFilter=false
    orderBy='a'
    valueList=this.comboValueList
    selected=this.comboSelectedSingle
    itemKey='a'
    itemLabel='b'
    multiselect=false
    onSelected=(action 'onSelectedSingle')
    disabled=this.disabled
    labelOnly=this.labelOnly
    emptySelectionLabel='empty value'
    noValueLabel='hello'
  }}
</div>
<p>

</p>


<div>
  Async value
  {{combo-box
    valuePromise=this.asyncValueList
    selected=this.comboSelectedSingleAsync
    itemKey='a'
    itemLabel='b'
    multiselect=false
    onDropdownShow=(action 'actionCreateAsyncValueList')
    onSelected=(action 'onSelectedSingleAsync')
    disabledWhenEmpty=false
    canFilter=false
    disabled=this.disabled
    labelOnly=this.labelOnly
  }}
  {{this.comboSelectedSingleFormattedAsync}}
</div>
<p>

</p>

<div>
  Single select
  {{combo-box
    valueList=this.comboValueList
    selected=this.comboSelectedSingle
    itemKey='a'
    itemLabel='b'
    multiselect=false
    onSelected=(action 'onSelectedSingle')
    canFilter=true
    disabled=this.disabled
    labelOnly=this.labelOnly
    emptySelectionLabel='empty value'
  }}
  {{this.comboSelectedSingleFormatted}}
  <button {{action 'actionClearSingleCombo'}}>clear</button>
</div>
<p>

</p>

<div>
  Custom selected label
  {{combo-box
    valueList=this.comboValueList
    selected=this.comboSelectedPreviewSingle
    itemKey='a'
    itemLabel='b'
    itemLabelForSelectedPreview=(action 'customPreviewLabelFn')
    multiselect=false
    onSelected=(action 'onSelectedPreviewSingle')
    canFilter=true
    disabled=this.disabled
    labelOnly=this.labelOnly
    showLabelWhenDisabled=false
  }}
  {{this.comboSelectedPreviewSingleFormatted}}
</div>
<p>

</p>

<div>
  Custom label in dropdown list
  {{combo-box
    valueList=this.comboValueList
    selected=this.comboSelectedCustomDropdownSingle
    itemKey='a'
    itemLabel=(action 'customDropdownLabelFn')
    multiselect=false
    onSelected=(action 'onSelectedCustomDropdownSingle')
    canFilter=true
    disabled=this.disabled
    labelOnly=this.labelOnly
  }}
  {{this.comboSelectedCustomDropdownSingleFormatted}}
</div>
<p>

</p>

<div>
  Without dropdown button
  {{combo-box
    valueList=this.comboValueList
    selected=this.comboSelectedNoButton
    itemKey='a'
    itemLabel='b'
    multiselect=false
    onSelected=(action 'onSelectedNoButton')
    canFilter=true
    disabled=this.disabled
    labelOnly=this.labelOnly
    showDropdownButton=false
  }}
  {{this.comboSelectedNoButtonFormatted}}
</div>
<p>

</p>

<p>

</p>

<div>
  Single select - only 1 item in value list
  {{combo-box
    valueList=this.oneItemValueList
    selected=this.oneItemSelectedSingle1
    itemKey='a'
    itemLabel='b'
    multiselect=false
    onSelected=(action 'onOneItemSelected1')
    canFilter=false
    disabled=this.disabled
    labelOnly=this.labelOnly
  }}
  {{this.oneItemSelectedSingleFormatted1}}
</div>
<p>

</p>


<div>
  Single select without filtering
  {{combo-box
    valueList=this.comboValueList
    selected=this.comboSelectedSingleWithoutFilter
    itemKey='a'
    itemLabel='b'
    multiselect=false
    onSelected=(action 'onSelectedSingleWithoutWilter')
    canFilter=false
    disabled=this.disabled
    labelOnly=this.labelOnly
  }}
  {{this.comboSelectedSingleFormattedWithoutFilter}}
</div>
<p>

</p>
<div>
  Async value
  {{combo-box
    valuePromise=this.asyncValueList
    selected=this.comboSelectedSingleAsync
    itemKey='a'
    itemLabel='b'
    multiselect=false
    onSelected=(action 'onSelectedSingleAsync')
    canFilter=true
    disabled=this.disabled
    labelOnly=this.labelOnly
    noValueLabel="I am async combobox"
  }}
  {{comboSelectedSingleFormattedAsync}}
</div>
<p>

</p>

<div>
  Single select without filtering - preselect
  {{combo-box
    valueList=this.comboValueList
    selected=this.comboPreSelectedSingle
    itemKey='a'
    itemLabel='b'
    multiselect=false
    preselectFirst=true
    onSelected=(action 'onPreSelectedSingle')
    canFilter=false
    disabled=this.disabled
    labelOnly=this.labelOnly
  }}
  {{this.comboPreSelectedSingleFormatted}}
</div>
<p>

</p>


<div>
  Multi select
  {{combo-box
    valueList=this.comboValueList
    selected=this.comboSelectedMulti
    itemKey='a'
    itemLabel='b'
    multiselect=true
    onSelected=(action 'onSelectedMulti')
    canFilter=true
    disabled=this.disabled
    labelOnly=this.labelOnly
  }}
  {{this.comboSelectedMultiFormatted}}
</div>
<p>

</p>

<div>

  Labelonly combobox
  {{combo-box
    itemKey='a'
    itemLabel='b'
    multiselect=false
    canFilter=true
    disabled=this.disabled
    labelOnly=true
    noValueLabel="I am label only combobox with no value"
  }}
</div>

<p>

</p>

<div>

  Complex combobox with callbacks and valuePromise that resolves after dropdown is shown
  {{combo-box
    itemKey='a'
    itemLabel='b'
    multiselect=false
    canFilter=true
    disabled=this.disabled
    valuePromise=this.complexValuePromise
    labelOnly=this.labelOnlyWithNoValue
    noValueLabel="I am label only combobox with no value"
    onDropdownShow=(action 'onDropdownShow')
    onDropdownHide=(action 'onDropdownHide')
  }}
</div>
labelOnly: {{this.labelOnly}}
<button {{action 'actionToggleLabelOnlyWithNoValue'}}>Toggle label only for this combobox</button>

<p>

</p>
<div>
  Null valueList
  {{combo-box
    valueList=null
    selected=this.comboPreSelectedSingle
    itemKey='a'
    itemLabel='b'
    multiselect=false
    preselectFirst=true
    canFilter=false
    disabled=this.disabled
    labelOnly=this.labelOnly
  }}
</div>
<p>

</p>

<div>
  Null valueList - with noValueLabel
  {{combo-box
    id="noValueLabelCombo"
    valueList=null
    selected=this.noValueLabelSelected
    itemKey='a'
    itemLabel='b'
    multiselect=false
    preselectFirst=true
    canFilter=false
    disabled=this.disabled
    labelOnly=this.labelOnly
    noValueLabel='no value'
  }}
</div>
<p>
</p>

<div id="manyItems">
  Many items - automatic scrollbar
  {{combo-box
    valueList=this.comboValueListMany
    itemKey='a'
    itemLabel='b'
    multiselect=false
    canFilter=true
  }}
</div>

<p>

</p>

<div>
  Custom value selected
  {{combo-box
     itemKey='a'
    itemLabel='b'
    valueList=this.comboValueList
    selected=this.customSelectedCombo
    confirmInputValueOnBlur=true
    onSelected=(action 'onCustomSelected')
    canFilter=true
    disabled=this.disabled
    labelOnly=this.labelOnly
    emptySelectionLabel='empty value'
  }}
  {{this.customSelectedCombo.b}}
</div>

<p>

</p>

<button {{action 'actionToggleLabelOnly'}}>Toggle label only</button>
<button {{action 'actionToggleDisabled'}}>Toggle disabled</button>
<button {{action 'actionCreateAsyncValueList'}}>Create async value</button>
<button {{action 'actionRemoveValueList'}}>Clear value list</button>

<input>

<p>
  <input placeholder="just a random input">
</p>

<div class="fixed-positioned-dropdown">
  Single select in fixed container
  {{#if this.showFixedCombo}}
    {{combo-box
      valueList=this.comboValueList
      selected=this.comboSelectedSingle
      itemKey='a'
      itemLabel='b'
      multiselect=false
      onSelected=(action 'onSelectedSingle')
      canFilter=true
      disabled=this.disabled
      labelOnly=this.labelOnly
    }}
    {{this.comboSelectedSingleFormatted}}
  {{/if}}
  <button {{action 'showHideFixed'}}>show/hide fixed panel</button>
</div>
